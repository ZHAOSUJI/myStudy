它确实为大多数程序员提供了便利：
1、程序员不需要再动手写SQL语句，或者说大部分情况下不需要动手写，只需要调用一系列函数即可完成数据库CURD操作。
2、对不同数据库管理系统的连接以及操作进行了抽象，程序员完全可以不考虑使用的是什么数据库以及数据库的版本。
总之，在中小型的项目开发中，它的确为我们带来了高效的开发效率。

以上即是它的优点，下面进入正题，即ORM的弊端以及它对数据库优化的影响。
缺点：
1、对于复杂的SQL有心无力。
2.、无法完全屏蔽数据库底层细节（这也将是下面讨论的），开发人员仍然要熟悉数据库底层操作。
3、关系-对象映射的实现是以性能为代价，方便了开发，牺牲了效率。
4、多余的工作：大多数ORM框架为了达到屏蔽某些细节问题或者对数据库进行抽象，做了很多额外的工作，而这些工作对于大多数人来说是不需要的。比如，TP的ORM为防止SQL注入，做了很多类似强制类型转换的工作。这样做不仅仅降低了性能，同时也改变了数据本身的意义，对数据造成了污染。