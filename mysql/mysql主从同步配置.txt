复制原理:

1.master将数据改变记录到bin日志中,也就是配置的log-bin指定的文件,这些记录叫做二进制日志事件

2.slave通过I/O线程读取master中的bin日志并写入自己的中继日志

3.slave重做中继日志中的事件,把中继日志中的事件信息一条一条的在本地执行一次,完成数据在本地的存储,从而
将改变反映到它自己的数据(数据重放)

要求:

1.主从服务器操作系统版本和位数一致

2.Master和slave数据库版本一致

3.Master和slave数据库中的数据要一致

4.Master开启二进制日志,Master和slave的server_id在局域网内必须唯一


1.master配置
[mysqld]
#主库sever_id,唯一,一般设置为IP
server_id=100

#设置记录的数据库
#binlog-do-db=test
#设置不记录的数据库
binlog-ignore-db=mysql

#日志名称
log-bin=edu-mysql-bin

#为每个session分配的内存,在事务过程中用来存储二进制日志的缓存
binlog_cache_size=1M

#主从复制的格式(mixed,statement,row,默认为statement)
binlog_format=mixed

#二进制文件自动删除/过期天数,默认为0,不自动删除
expire_logs_days=7

slave_skip_errors=1062

2.创建数据同步用户(在master设置)
create user 'mast'@'%' identified by '12345';
grant replication slave,replication client on *.* to 'mast'@'%';

3.slave配置
[mysqld]
server_id=101

binlog-ignore-db=mysql

#以备作为别的slave的master
log-bin=edu-mysql-slave1-bin

binlog_cache_size=1M

binlog_format=mixed

expire_logs_days=7

slave_skip_errors=1062

#配置中继日志
replay_log=edu_mysql_replay_bin

#log_slave_updates表示slave将复制事件写进自己的二进制日志
log_slave_updates=1

#开启只读模式(root用户无效)
read_only=1

4.查询master

在master中
show master status;
记录下file列和position

5.在slave中设置master的值
change master to master_host='1270.0.1',master_user='mast',master_password='12345',master_port=3307,
master_log_file='edu-mysql-bin.000001',master_log_pos=1386,master_connect_retry=30;

5.开启slave
在slave
start slave;




