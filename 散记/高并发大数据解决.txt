短:
1.页面静态化
2.使用缓存。需要有机制维持缓存和数据库一致性(另外讨论)
3.使用存储过程。将处理一次请求需要多次访问数据库的操作,
将其整合到存储过程,这样只要一次数据库访问就可以了。
4.批量读取。高并发情况下,可以把多个请求的查询合并到一起,以减少
数据库的访问次数
5.延迟修改。高并发下,可以将多次修改请求,先保存至缓存中,然后定时
将缓存中的数据保存到数据库中,风险是可能会断电丢失缓存中的数据.
6.使用索引.

少:查询数据要少
1.分表(垂直分表,水品分表)

2.分离活跃数据 例如注册用户很多,但是活跃用户很少,可以将活跃用户
保存一张表,查询的时候先查询活跃用户表,没有的话再查总表,类似于缓存.

3.分块 数据库层面优化,对程序透明,查询大数据只用找到相应块。

分流

1.集群->反向代理,将并发请求分配到不同服务器上,可以是业务服务器,
也可以是数据库服务器

2.分布式->分布式是将单次请求的多项业务逻辑分配到多个服务器,
这样可以处理很多逻辑,一般使用与特别复杂的业务请求

3.CDN->在域名解析层面的分流,例如将华南地区的用户请求分配到
华南的服务器。